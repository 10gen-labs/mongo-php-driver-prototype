<?php

namespace MongoDB;

/**
 * Result returned by Server and Manager executeWrite() methods.
 *
 * This class may be constructed internally if it will encapsulate a libmongoc
 * data structure.
 */
final class WriteResult
{
    /**
     * Returns the GeneratedIds for any inserted documents
     *
     * @return GeneratedId[]
     */
    public function getGeneratedIdsForInsert()
    {
        /* Return an array of identifiers generated by the driver for insert
         * operations. Each GeneratedId has a batch index and the ID value.
         *
         * This supersedes the identifier-setting hack in the 1.x driver.
         */
    }

    /**
     * Returns the GeneratedIds for any upserted documents
     *
     * @return GeneratedId[]
     */
    public function getGeneratedIdsForUpsert()
    {
        /* Return an array of identifiers generated by the server for upsert
         * operations. Each GeneratedId has a batch index and the ID value.
         */
    }

    /**
     * Returns the number of documents that were inserted
     *
     * @return integer
     */
    public function getNumInserted() {}

    /**
     * Returns the number of documents that matched the update criteria
     *
     * @return integer
     */
    public function getNumMatched() {}

    /**
     * Returns the number of documents that were actually modified by an update
     *
     * @return integer
     */
    public function getNumModified() {}

    /**
     * Returns the number of documents that were deleted
     *
     * @return integer
     */
    public function getNumRemoved() {}

    /**
     * Returns the number of documents that were upserted
     *
     * @return integer
     */
    public function getNumUpserted() {}

    /**
     * Returns metadata about the operation.
     *
     * @see https://github.com/mongodb/specifications/blob/master/source/server_write_commands.rst#situational-fields
     * @return array Additional metadata for the operation(s) (e.g. lastOp)
     */
    public function getInfo() {}

    /**
     * Returns the Server from which the result originated
     *
     * @return Server
     */
    public function getServer() {}

    /**
     * Return any write concern errors that occurred
     *
     * @return WriteConcernError[]
     */
    public function getWriteConcernErrors() {}

    /**
     * Returns any write errors that occurred
     *
     * @return WriteError[]
     */
    public function getWriteErrors() {}
}
