--TEST--
BSON encoding: Encoding data into BSON representation, and BSON into Extended JSON
--SKIPIF--
<?php require "tests/utils/basic-skipif.inc"?>
--FILE--
<?php 
require_once "tests/utils/basic.inc";

$tests = array(
    array("hello" => "world"),
    (object)array("hello" => "world"),
    array(array("hello" => "world")),
    array((object)array("hello" => "world")),
    array(array(1, 2, 3, 4, 5, 6, 7, 8, 9)),
    array((object)array(1, 2, 3, 4, 5, 6, 7, 8, 9)),
    array(array("0" => 1, "1" => 2, "2" => 3, "3" => 4, "4" => 5, "5" => 6, "6" => 7, "7" => 8, "8" => 9)),
    array(null),
    array(123),
    array(4.23),
    array(true),
    array(false),
    array("string"),
    array("string", true),
    array('test', 'foo', 'bar'),
    array('test' => 'test', 'foo' => 'foo', 'bar' => 'bar'),
    array('foo' => 'test', 'foo', 'bar'),
    array("int" => 3, "boolean" => true, "array" => array("foo", "bar"), "object" => new stdclass, "string" => "test", 3 => "test"),
    array(array("string", true)),
    array(array('test', 'foo', 'bar')),
    array(array('test' => 'test', 'foo' => 'foo', 'bar' => 'bar')),
    array(array('foo' => 'test', 'foo', 'bar')),
    array(array("int" => 3, "boolean" => true, "array" => array("foo", "bar"), "object" => new stdclass, "string" => "test", 3 => "test")),
);

foreach($tests as $n => $test) {
    $s = bson_encode($test);
    echo "Test#{$n} ", bson_to_json($s), "\n";
    hex_dump($s);
}
?>
===DONE===
<?php exit(0); ?>
--EXPECT--
Test#0 { "hello" : "world" }
     0 : 16 00 00 00 02 68 65 6c 6c 6f 00 06 00 00 00 77  [.....hello.....w]
    10 : 6f 72 6c 64 00 00                                [orld..]
Test#1 { "hello" : "world" }
     0 : 16 00 00 00 02 68 65 6c 6c 6f 00 06 00 00 00 77  [.....hello.....w]
    10 : 6f 72 6c 64 00 00                                [orld..]
Test#2 { "0" : { "hello" : "world" } }
     0 : 1e 00 00 00 03 30 00 16 00 00 00 02 68 65 6c 6c  [.....0......hell]
    10 : 6f 00 06 00 00 00 77 6f 72 6c 64 00 00 00        [o.....world...]
Test#3 { "0" : { "hello" : "world" } }
     0 : 1e 00 00 00 03 30 00 16 00 00 00 02 68 65 6c 6c  [.....0......hell]
    10 : 6f 00 06 00 00 00 77 6f 72 6c 64 00 00 00        [o.....world...]
Test#4 { "0" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ] }
     0 : 70 00 00 00 04 30 00 68 00 00 00 12 30 00 01 00  [p....0.h....0...]
    10 : 00 00 00 00 00 00 12 31 00 02 00 00 00 00 00 00  [.......1........]
    20 : 00 12 32 00 03 00 00 00 00 00 00 00 12 33 00 04  [..2..........3..]
    30 : 00 00 00 00 00 00 00 12 34 00 05 00 00 00 00 00  [........4.......]
    40 : 00 00 12 35 00 06 00 00 00 00 00 00 00 12 36 00  [...5..........6.]
    50 : 07 00 00 00 00 00 00 00 12 37 00 08 00 00 00 00  [.........7......]
    60 : 00 00 00 12 38 00 09 00 00 00 00 00 00 00 00 00  [....8...........]
Test#5 { "0" : { "0" : 1, "1" : 2, "2" : 3, "3" : 4, "4" : 5, "5" : 6, "6" : 7, "7" : 8, "8" : 9 } }
     0 : 70 00 00 00 03 30 00 68 00 00 00 12 30 00 01 00  [p....0.h....0...]
    10 : 00 00 00 00 00 00 12 31 00 02 00 00 00 00 00 00  [.......1........]
    20 : 00 12 32 00 03 00 00 00 00 00 00 00 12 33 00 04  [..2..........3..]
    30 : 00 00 00 00 00 00 00 12 34 00 05 00 00 00 00 00  [........4.......]
    40 : 00 00 12 35 00 06 00 00 00 00 00 00 00 12 36 00  [...5..........6.]
    50 : 07 00 00 00 00 00 00 00 12 37 00 08 00 00 00 00  [.........7......]
    60 : 00 00 00 12 38 00 09 00 00 00 00 00 00 00 00 00  [....8...........]
Test#6 { "0" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ] }
     0 : 70 00 00 00 04 30 00 68 00 00 00 12 30 00 01 00  [p....0.h....0...]
    10 : 00 00 00 00 00 00 12 31 00 02 00 00 00 00 00 00  [.......1........]
    20 : 00 12 32 00 03 00 00 00 00 00 00 00 12 33 00 04  [..2..........3..]
    30 : 00 00 00 00 00 00 00 12 34 00 05 00 00 00 00 00  [........4.......]
    40 : 00 00 12 35 00 06 00 00 00 00 00 00 00 12 36 00  [...5..........6.]
    50 : 07 00 00 00 00 00 00 00 12 37 00 08 00 00 00 00  [.........7......]
    60 : 00 00 00 12 38 00 09 00 00 00 00 00 00 00 00 00  [....8...........]
Test#7 { "0" : null }
     0 : 08 00 00 00 0a 30 00 00                          [.....0..]
Test#8 { "0" : 123 }
     0 : 10 00 00 00 12 30 00 7b 00 00 00 00 00 00 00 00  [.....0.{........]
Test#9 { "0" : 4.230000 }
     0 : 10 00 00 00 01 30 00 ec 51 b8 1e 85 eb 10 40 00  [.....0..Q.....@.]
Test#10 { "0" : true }
     0 : 09 00 00 00 08 30 00 01 00                       [.....0...]
Test#11 { "0" : false }
     0 : 09 00 00 00 08 30 00 00 00                       [.....0...]
Test#12 { "0" : "string" }
     0 : 13 00 00 00 02 30 00 07 00 00 00 73 74 72 69 6e  [.....0.....strin]
    10 : 67 00 00                                         [g..]
Test#13 { "0" : "string", "1" : true }
     0 : 17 00 00 00 02 30 00 07 00 00 00 73 74 72 69 6e  [.....0.....strin]
    10 : 67 00 08 31 00 01 00                             [g..1...]
Test#14 { "0" : "test", "1" : "foo", "2" : "bar" }
     0 : 27 00 00 00 02 30 00 05 00 00 00 74 65 73 74 00  ['....0.....test.]
    10 : 02 31 00 04 00 00 00 66 6f 6f 00 02 32 00 04 00  [.1.....foo..2...]
    20 : 00 00 62 61 72 00 00                             [..bar..]
Test#15 { "test" : "test", "foo" : "foo", "bar" : "bar" }
     0 : 2e 00 00 00 02 74 65 73 74 00 05 00 00 00 74 65  [.....test.....te]
    10 : 73 74 00 02 66 6f 6f 00 04 00 00 00 66 6f 6f 00  [st..foo.....foo.]
    20 : 02 62 61 72 00 04 00 00 00 62 61 72 00 00        [.bar.....bar..]
Test#16 { "foo" : "test", "0" : "foo", "1" : "bar" }
     0 : 29 00 00 00 02 66 6f 6f 00 05 00 00 00 74 65 73  [)....foo.....tes]
    10 : 74 00 02 30 00 04 00 00 00 66 6f 6f 00 02 31 00  [t..0.....foo..1.]
    20 : 04 00 00 00 62 61 72 00 00                       [....bar..]
Test#17 { "int" : 3, "boolean" : true, "array" : [ "foo", "bar" ], "object" : {  }, "string" : "test", "3" : "test" }
     0 : 68 00 00 00 12 69 6e 74 00 03 00 00 00 00 00 00  [h....int........]
    10 : 00 08 62 6f 6f 6c 65 61 6e 00 01 04 61 72 72 61  [..boolean...arra]
    20 : 79 00 1b 00 00 00 02 30 00 04 00 00 00 66 6f 6f  [y......0.....foo]
    30 : 00 02 31 00 04 00 00 00 62 61 72 00 00 03 6f 62  [..1.....bar...ob]
    40 : 6a 65 63 74 00 05 00 00 00 00 02 73 74 72 69 6e  [ject.......strin]
    50 : 67 00 05 00 00 00 74 65 73 74 00 02 33 00 05 00  [g.....test..3...]
    60 : 00 00 74 65 73 74 00 00                          [..test..]
Test#18 { "0" : [ "string", true ] }
     0 : 1f 00 00 00 04 30 00 17 00 00 00 02 30 00 07 00  [.....0......0...]
    10 : 00 00 73 74 72 69 6e 67 00 08 31 00 01 00 00     [..string..1....]
Test#19 { "0" : [ "test", "foo", "bar" ] }
     0 : 2f 00 00 00 04 30 00 27 00 00 00 02 30 00 05 00  [/....0.'....0...]
    10 : 00 00 74 65 73 74 00 02 31 00 04 00 00 00 66 6f  [..test..1.....fo]
    20 : 6f 00 02 32 00 04 00 00 00 62 61 72 00 00 00     [o..2.....bar...]
Test#20 { "0" : { "test" : "test", "foo" : "foo", "bar" : "bar" } }
     0 : 36 00 00 00 03 30 00 2e 00 00 00 02 74 65 73 74  [6....0......test]
    10 : 00 05 00 00 00 74 65 73 74 00 02 66 6f 6f 00 04  [.....test..foo..]
    20 : 00 00 00 66 6f 6f 00 02 62 61 72 00 04 00 00 00  [...foo..bar.....]
    30 : 62 61 72 00 00 00                                [bar...]
Test#21 { "0" : { "foo" : "test", "0" : "foo", "1" : "bar" } }
     0 : 31 00 00 00 03 30 00 29 00 00 00 02 66 6f 6f 00  [1....0.)....foo.]
    10 : 05 00 00 00 74 65 73 74 00 02 30 00 04 00 00 00  [....test..0.....]
    20 : 66 6f 6f 00 02 31 00 04 00 00 00 62 61 72 00 00  [foo..1.....bar..]
    30 : 00                                               [.]
Test#22 { "0" : { "int" : 3, "boolean" : true, "array" : [ "foo", "bar" ], "object" : {  }, "string" : "test", "3" : "test" } }
     0 : 70 00 00 00 03 30 00 68 00 00 00 12 69 6e 74 00  [p....0.h....int.]
    10 : 03 00 00 00 00 00 00 00 08 62 6f 6f 6c 65 61 6e  [.........boolean]
    20 : 00 01 04 61 72 72 61 79 00 1b 00 00 00 02 30 00  [...array......0.]
    30 : 04 00 00 00 66 6f 6f 00 02 31 00 04 00 00 00 62  [....foo..1.....b]
    40 : 61 72 00 00 03 6f 62 6a 65 63 74 00 05 00 00 00  [ar...object.....]
    50 : 00 02 73 74 72 69 6e 67 00 05 00 00 00 74 65 73  [..string.....tes]
    60 : 74 00 02 33 00 05 00 00 00 74 65 73 74 00 00 00  [t..3.....test...]
===DONE===
